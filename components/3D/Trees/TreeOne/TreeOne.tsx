/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 TreeOne.glb -t -T -a 
Files: TreeOne.glb [27.5KB] > C:\Repos\portfolios\portfolio-2024\TreeOne-transformed.glb [3.32KB] (88%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Tree_1_1: THREE.Mesh;
    Tree_1_2: THREE.Mesh;
  };
  materials: {};
};

const TreeOne = (props: JSX.IntrinsicElements["group"]) => {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "/objects/TreeOne.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group
        name="Tree_1"
        position={[0.047, 16.843, 30.142]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <mesh
          name="Tree_1_1"
          geometry={nodes.Tree_1_1.geometry}
          material={nodes.Tree_1_1.material}
        >
          <meshStandardMaterial />
        </mesh>
        <mesh
          name="Tree_1_2"
          geometry={nodes.Tree_1_2.geometry}
          material={nodes.Tree_1_2.material}
        >
          <meshStandardMaterial />
        </mesh>
      </group>
    </group>
  );
};

useGLTF.preload("/objects/TreeOne.glb");

export default TreeOne;
